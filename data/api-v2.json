{
  "base": "https://api.freestuffbot.xyz/v2",
  "@": {
    "generic-error": {
      "body": {
        "error": "error name",
        "message": "error message"
      },
      "headers": {
        "X-Server-Time": "<timestamp:int> // current server time in unix ms"
      }
    },
    "generic-502": {
      "code": 502,
      "desc": "An internal error, try again after a few seconds.",
      "returns": "@generic-error"
    }
  },
  "models": {
    "ProductKind": {
      "type": "string",
      "schema": [
        "game // normal games",
        "dlc // game addons",
        "loot // ingame content",
        "software // non-game software (unused)",
        "art // digital artwork (unused)",
        "ost // game soundtrack (unused)",
        "book // digital book (unused)",
        "other // other kinds of content, gaming related"
      ]
    },
    "ProductApprovalStatus": {
      "type": "string",
      "schema": [
        "pending // data has been aggregated but is awaiting verification through a human content moderator",
        "issues // unused",
        "approved // the product was approved by a human content moderator or automated system but is not yet published",
        "processing // the product is in a loading state. automated systems are processing the product, e.g. scraping data",
        "published // this product has been published"
      ]
    },
    "Platform": {
      "type": "string",
      "schema": [
        "other",
        "steam",
        "epic",
        "humble",
        "gog",
        "origin",
        "ubi",
        "itch",
        "prime",
        "// Please note that this list is non-exhaustive, while the names above will not change, new platforms may be added at will and this documentation might not always be up to date with all possible values. Be sure to handle unknown platform values properly, e.g. treating them as 'other' until further differenciated."
      ]
    },
    "Product": {
      "type": "Object",
      "schema": [
        "{",
        "  id: int",
        "  title: string",
        "  prices: TODO",
        "  kind: ProductKind",
        "  tags: string[] // unsorted, non-standardized",
        "  thumbnails: TODO",
        "  description: string",
        "  rating: float // this is an aggregated score where 0 represents the worst possible and 1 the best possible rating",
        "  copyright: string // name of the ip copyright holder",
        "  until: int // unix timestamp in ms",
        "  type: PublishingChannel",
        "  urls: TODO",
        "  platform: Platform",
        "  flags: TODO",
        "  notice: string // a rare optional extra info text added by a FreeStuff team member meant for public display alongside the product",
        "  meta: TODO",
        "  staffApproved: boolean // true means a human checked the data prior to being published",
        "}"
      ]
    },
    "Announcement": {
      "type": "Object",
      "schema": []
    },
    "Channel": {
      "type": "string",
      "schema": [
        "keep // Free to Keep / 100% discount",
        "timed // Free to play / Free weekend",
        "prime // Available through Prime Gaming",
        "gamepass // Available through GamePass",
        "other // DLCs & More / everything else",
        "debug // exclusively used internally"
      ]
    }
  },
  "endpoints": {
    "get-ping": {
      "method": "GET",
      "route": "/ping",
      "params": [
        {
          "location": "header",
          "key": "Authorization",
          "type": "string",
          "desc": "Your api key"
        }
      ],
      "responses": [
        {
          "code": 200,
          "desc": "Success",
          "returns": {
            "body": "@",
            "headers": {}
          }
        }
      ]
    },
    "get-products": {
      "method": "GET",
      "route": "/products",
      "params": [
        {
          "location": "header",
          "key": "Authorization",
          "type": "string",
          "desc": "Your api key"
        },
        {
          "location": "query",
          "key": "limit",
          "type": "?int",
          "desc": "Limit how many products are returned at once"
        },
        {
          "location": "query",
          "key": "offset",
          "type": "?int",
          "desc": "Offset the results. Used with limit parameter for pagination."
        },
        {
          "location": "query",
          "key": "type",
          "type": "?Channel",
          "desc": "Only list products with the given type"
        },
        {
          "location": "query",
          "key": "kind",
          "type": "?ProductKind",
          "desc": "Only list products with the given kind"
        },
        {
          "location": "query",
          "key": "since",
          "type": "?int (unix ms time)",
          "desc": "Only list products published at or after the given timestamp"
        }
      ],
      "responses": [
        {
          "code": 200,
          "desc": "Success",
          "returns": {
            "body": {
              "TODO": true
            },
            "headers": {
              "X-Server-Time": "<timestamp:int> // current server time in unix ms",
              "X-Next-Page": "<offset:int> // which 'offset' query variable should be used to get the next page. this header is not present if the end of the list is reached",
              "X-Next-Since": "<timestamp:int> // only if the request had a 'since' query parameter - which 'since' query variable should be used when requesting the next time",
              "X-Check-Again": "<seconds:int> // only if the request had a 'since' query parameter - a recommendation on how many seconds to wait until requesting the next time. this value might decrease during peak times and increase during unlikely moments."
            }
          }
        },
        {
          "code": 400,
          "desc": "Invalid product id.",
          "returns": "@generic-error"
        },
        {
          "code": 404,
          "desc": "No product with your id was found.",
          "returns": "@generic-error"
        },
        "@generic-502"
      ]
    },
    "get-products-id": {
      "method": "GET",
      "route": "/products/:id",
      "params": [
        {
          "location": "route",
          "key": ":id",
          "type": "string",
          "desc": "The id of the product you're looking up"
        },
        {
          "location": "header",
          "key": "Authorization",
          "type": "string",
          "desc": "Your api key"
        },
        {
          "location": "query",
          "key": "localize",
          "type": "?string[]",
          "desc": "Deprecated. Returns a localized object for each language provided in the query value."
        }
      ],
      "responses": [
        {
          "code": 200,
          "desc": "Success",
          "returns": {
            "body": {
              "TODO": true
            },
            "headers": {
              "X-Server-Time": "<integer timestamp>"
            }
          }
        },
        {
          "code": 400,
          "desc": "Invalid product id.",
          "returns": "@generic-error"
        },
        {
          "code": 404,
          "desc": "No product with your id was found.",
          "returns": "@generic-error"
        },
        "@generic-502"
      ]
    }
  }
}